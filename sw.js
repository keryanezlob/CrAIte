const CACHE_NAME = 'creaite-cache-v1.1.1.3'; // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ú–ï–ù–Ø–ô –≠–¢–û–¢ –•–≠–® –ö–ê–ñ–î–´–ô –†–ê–ó!

self.addEventListener('install', e => {
  console.log('üì¶ Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è creAIte...');
  e.waitUntil(
    caches.open(CACHE_NAME).then(cache => {
      return cache.addAll([
        '.',
        'index.html',
        'manifest.json',
        'icon-192.png',
        'icon-512.png',
        'theme.js',
        'icon-moon.png',
        'icon-sun.png'
      ]);
    }).then(() => {
      console.log('‚úÖ Service Worker: –†–µ—Å—É—Ä—Å—ã —É—Å–ø–µ—à–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã.');
      self.skipWaiting(); // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π Service Worker —Å—Ä–∞–∑—É
    }).catch(error => {
      console.error('‚ùå Service Worker: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    })
  );
});

self.addEventListener('activate', e => {
  console.log('üîÑ Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫—ç—à–µ–π...');
  e.waitUntil(
    caches.keys().then(keys => {
      return Promise.all(
        keys.filter(key => key !== CACHE_NAME)
            .map(key => {
              console.log(`üóëÔ∏è Service Worker: –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞: ${key}`);
              return caches.delete(key);
            })
      );
    }).then(() => {
      console.log('‚úÖ Service Worker: –°—Ç–∞—Ä—ã–µ –∫—ç—à–∏ —É–¥–∞–ª–µ–Ω—ã. –ù–æ–≤—ã–π Service Worker –∞–∫—Ç–∏–≤–µ–Ω.');
      self.clients.claim(); // –í–∑—è—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Å–µ–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
      // –°–æ–æ–±—â–∞–µ–º –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º (–≤–∫–ª–∞–¥–∫–∞–º), —á—Ç–æ Service Worker –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
      self.clients.matchAll().then(clients => {
          clients.forEach(client => client.postMessage({ type: 'UPDATE_ACTIVATED' }));
      });
    }).catch(error => {
      console.error('‚ùå Service Worker: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:', error);
    })
  );
});

self.addEventListener('fetch', e => {
  e.respondWith(
    caches.match(e.request).then(response => {
      if (response) {
        return response;
      }
      return fetch(e.request);
    }).catch(error => {
      console.error('‚ùå Service Worker: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
    })
  );
});

// –ù–æ–≤—ã–π —Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç theme.js)
self.addEventListener('message', (event) => {
    if (event.data && event.data.type === 'SKIP_WAITING') {
        self.skipWaiting(); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Service Worker
        console.log('‚ö°Ô∏è Service Worker: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ SKIP_WAITING, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è.');
    }
});
