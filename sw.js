const CACHE_NAME = 'creaite-cache-v0.1.0.0.2'; // –ù–ï –ó–ê–ë–´–í–ê–ï–ú –û–ë–ù–û–í–õ–Ø–¢–¨ –•–≠–®

self.addEventListener('install', e => {
  e.waitUntil(
    caches.open(CACHE_NAME).then(cache => {
      console.log('üì¶ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è creAIte...');
      return cache.addAll([
        '.',
        'index.html',
        'manifest.json',
        'icon-192.png',
        'icon-512.png',
        'theme.js',
        'icon-moon.png', // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∏–∫–æ–Ω–∫–∏ —Ç–æ–∂–µ –∫—ç—à–∏—Ä—É—é—Ç—Å—è
        'icon-sun.png'   // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∏–∫–æ–Ω–∫–∏ —Ç–æ–∂–µ –∫—ç—à–∏—Ä—É—é—Ç—Å—è
      ]);
    }).catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    })
  );
});

self.addEventListener('activate', e => {
  e.waitUntil(
    caches.keys().then(keys => {
      return Promise.all(
        keys.filter(k => k !== CACHE_NAME)
            .map(k => {
              console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞: ${k}`);
              return caches.delete(k);
            })
      );
    }).catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Service Worker:', error);
    })
  );
});

self.addEventListener('fetch', e => {
  e.respondWith(
    caches.match(e.request).then(response => {
      if (response) {
        return response;
      }
      return fetch(e.request);
    }).catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
    })
  );
});
